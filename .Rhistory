library(kable)
data(worldcup)
worldcup %>%
mutate(Name = rownames(worldcup),
Team = as.character(Team)) %>%
select(Name, Position, Shots, Team) %>%
arrange(desc(Shots)) %>%
slice(1:5) %>%
left_join(team_standings, by = "Team") %>% # Merge in team standings
rename("Team Standing" = Standing) %>%
kable()
library(knitr)
data(worldcup)
worldcup %>%
mutate(Name = rownames(worldcup),
Team = as.character(Team)) %>%
select(Name, Position, Shots, Team) %>%
arrange(desc(Shots)) %>%
slice(1:5) %>%
left_join(team_standings, by = "Team") %>% # Merge in team standings
rename("Team Standing" = Standing) %>%
kable()
ext_tracks_file <- "data/ebtrk_atlc_1988_2015.txt"
ext_tracks_widths <- c(7, 10, 2, 2, 3, 5, 5, 6, 4, 5, 4, 4, 5, 3, 4, 3, 3, 3,
4, 3, 3, 3, 4, 3, 3, 3, 2, 6, 1)
ext_tracks_colnames <- c("storm_id", "storm_name", "month", "day",
"hour", "year", "latitude", "longitude",
"max_wind", "min_pressure", "rad_max_wind",
"eye_diameter", "pressure_1", "pressure_2",
paste("radius_34", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_50", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_64", c("ne", "se", "sw", "nw"), sep = "_"),
"storm_type", "distance_to_land", "final")
ext_tracks <- read_fwf(ext_tracks_file,
fwf_widths(ext_tracks_widths, ext_tracks_colnames),
na = "-99")
ext_tracks_file <- paste0("http://rammb.cira.colostate.edu/research/",
"tropical_cyclones/tc_extended_best_track_dataset/",
"data/ebtrk_atlc_1988_2015.txt")
ext_tracks_file <- "data/ebtrk_atlc_1988_2015.txt"
ext_tracks_widths <- c(7, 10, 2, 2, 3, 5, 5, 6, 4, 5, 4, 4, 5, 3, 4, 3, 3, 3,
4, 3, 3, 3, 4, 3, 3, 3, 2, 6, 1)
ext_tracks_colnames <- c("storm_id", "storm_name", "month", "day",
"hour", "year", "latitude", "longitude",
"max_wind", "min_pressure", "rad_max_wind",
"eye_diameter", "pressure_1", "pressure_2",
paste("radius_34", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_50", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_64", c("ne", "se", "sw", "nw"), sep = "_"),
"storm_type", "distance_to_land", "final")
ext_tracks <- read_fwf(ext_tracks_file,
fwf_widths(ext_tracks_widths, ext_tracks_colnames),
na = "-99")
ext_tracks_widths <- c(7, 10, 2, 2, 3, 5, 5, 6, 4, 5, 4, 4, 5, 3, 4, 3, 3, 3,
4, 3, 3, 3, 4, 3, 3, 3, 2, 6, 1)
ext_tracks_colnames <- c("storm_id", "storm_name", "month", "day",
"hour", "year", "latitude", "longitude",
"max_wind", "min_pressure", "rad_max_wind",
"eye_diameter", "pressure_1", "pressure_2",
paste("radius_34", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_50", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_64", c("ne", "se", "sw", "nw"), sep = "_"),
"storm_type", "distance_to_land", "final")
ext_tracks <- read_fwf(ext_tracks_file,
fwf_widths(ext_tracks_widths, ext_tracks_colnames),
na = "-99")
ext_tracks_file <- paste0("http://rammb.cira.colostate.edu/research/",
"tropical_cyclones/tc_extended_best_track_dataset/",
"data/ebtrk_atlc_1988_2015.txt")
ext_tracks_widths <- c(7, 10, 2, 2, 3, 5, 5, 6, 4, 5, 4, 4, 5, 3, 4, 3, 3, 3,
4, 3, 3, 3, 4, 3, 3, 3, 2, 6, 1)
ext_tracks_colnames <- c("storm_id", "storm_name", "month", "day",
"hour", "year", "latitude", "longitude",
"max_wind", "min_pressure", "rad_max_wind",
"eye_diameter", "pressure_1", "pressure_2",
paste("radius_34", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_50", c("ne", "se", "sw", "nw"), sep = "_"),
paste("radius_64", c("ne", "se", "sw", "nw"), sep = "_"),
"storm_type", "distance_to_land", "final")
ext_tracks <- read_fwf(ext_tracks_file,
fwf_widths(ext_tracks_widths, ext_tracks_colnames),
na = "-99")
ext_tracks
library(lubridate)
install.packages( "tidyverse")
library(lubridate)
ymd("2006-03-12")
ymd_hm("06/3/12 6:30 pm")
swirl()
library("readr")
library(readr)
datapath
print(datapath)
datafile <- paste(datapath,'urban.csv.gz' collapse="/")
datafile <- paste(datapath,'urban.csv.gz', collapse="/")
datafile <- paste(datapath,'urban.csv.gz')
datafile <- file.path(datapath, "urban.csv.gz")
urban <- read_csv(datafile)
head(urban)
urban <- transform(urban,zcta5 = as.character())
urban
info()
urban <- read_csv(datafile,col_types=cols(zcta5=col_character()))
urban <- read_csv(datafile,col_types=cols("ccc")
)
urban <- read_csv(datafile,col_types("ccc")
)
urban <- read_csv(datafile,col_types=cols("cccdc")
)
urban <- read_csv(datafile,col_types="cccdc")
urban <- read_csv(datafile,col_types="cccd")
urban <- read_csv(datafile,col_types="cccd", -FIPS)
urban <- read_csv(datafile,col_types="cccd", -"FIPS")
urban <- read_csv(datafile,col_types="cccd-")
head(urban)
urban <- read_csv(datafile,col_types="cccd-", n_max=100)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
name(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
worldcup
ls()
submit()
submit()
submit()
submit()
submit()
titanic
str(titanic)
titanic_1 <- titanic %>% Select (Survived,Pclass,Age,Sex)
titanic_1 <- titanic %>% select (Survived,Pclass,Age,Sex)
head(titanic_1)
submit()
titanic_1 <- titanic %>% select (Survived,Pclass,Age,Sex) %>% na.omit(Age)
head(titanic_1)
submit()
titanic_2 <- titanic %>% select (Survived,Pclass,Age,Sex) %>% na.omit(Age)
head(titanic_2)
titanic_2 <- titanic %>% select (Survived,Pclass,Age,Sex) %>% filter(!is.na(Age))
head (titanic_2)
submit()
titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>% Age[Age > 50] <- 'Over 50'
titanic_3 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>% titanic_3$agecat[titanic_3$Age >50] <- 'over 50'
titanic_3 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>% titanic_3$agecat[titanic_3$Age >50]
titanic_3 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>% agecat[Age >50]
submit()
titanic_3 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50")))
head(titanic_3)
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) :>% group_by(PClass,agecat,Sex)
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% group_by(PClass,agecat,Sex)
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% group_by(Pclass,agecat,Sex)
head(titanic_4)
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% group_by(Pclass,agecat,Sex)  %>% summarize()
head(titanic_4)
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% group_by(Pclass,agecat,Sex)  %>% summarize(survivors,N)
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% group_by(Pclass,agecat,Sex)  %>% summarize("survivors","N")
head(titanic_4)
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% group_by(Pclass,agecat,Sex)  %>% summarize(survivors=sum(survivors),N=sum(N))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% group_by(Pclass,agecat,Sex)  %>% summarise(survivors=sum(survivors),N=sum(N))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% summarise(survivors=sum(survivors),N=sum(N))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% summarise(survivors=sum(survived),N=sum(N))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% summarise(survivors=sum(Survived),N=sum(N))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% summarise(survivors=sum(Survived),N=count())
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>% summarise(survivors=sum(Survived),N=count(Survived))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
%>% Group_by(Pclass,agecat, Sex) %>%
summarise(survivors=sum(Survived),N=count(Survived))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
%>% group_by(Pclass,agecat, Sex) %>%
summarise(survivors=sum(Survived),N=count(Survived))
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
%>% group_by(Pclass,agecat, Sex) %>%
summarize(survivors=sum(Survived),N=n())
titanic_4 <- titanic %>%
select(Survived, Pclass, Age, Sex) %>%
filter(!is.na(Age)) %>%
mutate(agecat = cut(Age, breaks = c(0, 14.99, 50, 150),
include.lowest = TRUE,
labels = c("Under 15", "15 to 50",
"Over 50"))) %>%
group_by(Pclass,agecat, Sex) %>%
summarise(survivors=sum(Survived),N=n())
head(titanic_4)
submit()
install.packages(c("dplyr", "tidyr", "readr", "readxl"))
install.packages(c("dplyr", "tidyr", "readr", "readxl"))
install.packages(c("dplyr", "tidyr", "readr", "readxl"))
getwd()
df <- read.csv("Coursera/quiz_data/data/daily_SPEC_2014.csv.bz2")
head(df)
wis <- df %<% filter(state.name = "WISCONSIN")
wis <- df %>% filter(state.name = "WISCONSIN")
library(dplyr)
library("dplyr")
install.packages("dyplr")
install.packages("dplyr")
wis <- df %>% filter(state.name = "WISCONSIN")
library("dplyr")
library(dplyr)
library(dplyr)     # provides data manipulating functions.
library(magrittr)  # ceci n'est pas un pipe
wis <- df %>% filter(state.name = "WISCONSIN")
wis <- df %>% filter(state.name == "WISCONSIN")
head(wis)
library(dplyr)     # provides data manipulating function
install.packages("dplyr", dependencies = TRUE)
library(dplyr)     # provides data manipulating function
install.packages("dplyr")
library(dplyr)     # provides data manipulating function
library("dplyr")     # provides data manipulating function
getwd()
install.packages("~/CourseraWeek2_0.1.0.zip", repos = NULL, type = "win.binary")
library(CourseraWeek2)
fars_read_years(2013)
getwd()
setwd("C:/Users/Joe-1/Documents/CourseraWeek2")
fars_read_years(2013)
library(CourseraWeek2)
ls()
library(CourseraWeek2)
fars_read("accident_2013.csv.bz2")
fars_read("data/accident_2013.csv.bz2")
fars_read("data/accident_2013.csv.bz2")
df<-fars_read("accident_2013.csv.bz2")
df<-fars_read("data/accident_2013.csv.bz2")
desc.data(df)
desc::desc(df)
library(CourseraWeek2)
make_filename <- function(year) {
year <- as.integer(year)
#sprintf("data/accident_%d.csv.bz2", year)
system.file( sprintf("data/accident_%d.csv.bz2", year), package = "base", lib.loc = NULL, mustWork = FALSE)
}
make_filename(2013)
system.file("data/accident_2013.csv.bz2",mustWork = FALSE)
system.file("data/accident_2013.csv.bz2")
file.path("data/accident_2013.csv.bz2", fsep = .Platform$file.sep)
file.path("accident_2013.csv.bz2", fsep = .Platform$file.sep)
file.path("data\accident_2013.csv.bz2", fsep = .Platform$file.sep)
getAbsolutePath("data/accident_2013.csv.bz2", workDirectory=getwd(), expandTilde=FALSE, ...)
install.packages("Rutils")
install.packages("RUtils")
install.packages("R.utils")
getAbsolutePath("data/accident_2013.csv.bz2", workDirectory=getwd(), expandTilde=FALSE, ...)
library(R.utils)
getAbsolutePath("data/accident_2013.csv.bz2", workDirectory=getwd(), expandTilde=FALSE, ...)
getAbsolutePath("data/accident_2013.csv.bz2", workDirectory=getwd(), expandTilde=FALSE)
library(CourseraWeek2)
path.package("CourseraWeek2", quiet = FALSE)
library(CourseraWeek2)
library(CourseraWeek2)
make_filename(2013)
system.file("extdata", accident_2013.csv.bz2", package="CourseraWeek2")
system.file("extdata", "accident_2013.csv.bz2", package="CourseraWeek2")
?worldMapEnv
?stateMapEnv
data(stateMapEnv)
R_MAP_DATA_DIR
data(worldMapEnv)
install.packages(Maps)
install.packages("Maps")
install.packages("maps")
install.packages("maps")
data(worldMapEnv)
library(CourseraWeek2)
make_filename(2013)
system.file("extdata", "accident_2013.csv.bz2", package="CourseraWeek2")
library(CourseraWeek2)
library(CourseraWeek2)
library(CourseraWeek2)
library(CourseraWeek2)
library(CourseraWeek2)
library(CourseraWeek2)
library(CourseraWeek2)
which(qpdf)
which("qpdf")
install.packages(compactPDF)
install.packages("compactPDF")
tools::dependsOnPkgs(“genderizeR”)
tools::dependsOnPkgs("genderizeR")
revdep(vignettes, dependencies = c("Depends", "Imports", "Suggests", "LinkingTo"),
recursive = FALSE, ignore = NULL, bioconductor = FALSE)
devtools::revdep(vignettes, dependencies = c("Depends", "Imports", "Suggests", "LinkingTo"),
recursive = FALSE, ignore = NULL, bioconductor = FALSE)
Sys.getenv(“PATH”)
Sys.getenv("PATH")
Sys.which(Sys.getenv(“R_QPDF”, “qpdf”))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
getwd()
library(CourseraWeek2)
library(CourseraWeek2)
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("R_QPDF", "qpdf")
Sys.setenv("R_QPDF", "X:/R-3.3.3/bin/qpdf-6.0.0/bin")
Sys.setenv("R_QPDF", "X:/R-3.3.3/bin/qpdf-6.0.0/bin")
Sys.setenv(R_QPDF, "X:/R-3.3.3/bin/qpdf-6.0.0/bin")
Sys.setenv(R_QPDF= "X:/R-3.3.3/bin/qpdf-6.0.0/bin")
Sys.getenv("R_QPDF", "qpdf")
Sys.setenv(R_QPDF= "X:/R-3.3.3/bin/qpdf-6.0.0/bin/qpdf.exe")
?accident_2013.csv.bz2
devtools::document()
?accident_2013.csv.bz2
library(CourseraWeek2)
?accident_2013.csv.bz2
?accident_2013.csv.bz2
library(CourseraWeek2)
?accident_2013.csv.bz2
library(CourseraWeek2)
fars_read(make_filename(2013))
make_filename(2013)
library(CourseraWeek2)
make_filename(2013)
system.file("extdata", "accident_2013.csv.bz2", package="CourseraWeek2")
library(CourseraWeek2)
system.file("extdata", "accident_2013.csv.bz2", package="CourseraWeek2")
make_filename(2013)
show make_filename
show( make_filename)
library(CourseraWeek2)
df<-CourseraWeek2::fars_read(CourseraWeek2::make_filename(2013))
head(df)
fars_map_state(10,2014)
library(CourseraWeek2)
fars_map_state(10,2014)
install.packages("maps")
library(CourseraWeek2)
install.packages("maps")
library(CourseraWeek2)
install.packages("maps")
install.packages("maps")
library(CourseraWeek2)
library(CourseraWeek2)
fars_map_state(10,2014)
.libPaths()
install.packages("maps")
install.packages("maps")
library(CourseraWeek2)
fars_map_state(10,2014)
library(maps)
fars_map_state(10,2014)
library(CourseraWeek2)
fars_map_state(10,2014)
fars_map_state(20,2014)
library(CourseraWeek2)
df<-CourseraWeek2::fars_read(CourseraWeek2::make_filename(2013))
head(df)
CourseraWeek2::make_filename(2013)
df<-CourseraWeek2::fars_read_years(c(2013,2014))
head(df)
CourseraWeek2::fars_summarize_years(c(2013,2014))
CourseraWeek2::fars_map_state(10,2014)
CourseraWeek2::fars_map_state(10,2014)
df<-CourseraWeek2::fars_read(CourseraWeek2::make_filename(2013))
head(df)
CourseraWeek2::make_filename(2013)
df<-CourseraWeek2::fars_read_years(c(2013,2014))
head(df)
CourseraWeek2::fars_summarize_years(c(2013,2014))
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/mapdata")
CourseraWeek2::fars_map_state(10,2014)
CourseraWeek2::fars_map_state(10,2014)
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/mapdata/")
CourseraWeek2::fars_map_state(10,2014)
CourseraWeek2::fars_map_state(10,2014)
library(CourseraWeek2)
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/mapdata/")
?stateMapEnv
??stateMapEnv
data(stateMapEnv)
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/data/")
data(stateMapEnv)
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/mapdata/")
data(stateMapEnv)
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/")
data(stateMapEnv)
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/mapdata/")
data(stateMapEnv)
library(CourseraWeek2)
data(stateMapEnv)
Sys.setenv(R_MAP_DATA_DIR= "X:/R-3.3.3/library/maps/mapdata/")
CourseraWeek2::fars_map_state(10,2014)
CourseraWeek2::fars_map_state(10,2014)
df<-CourseraWeek2::fars_read(CourseraWeek2::make_filename(2013))
head(df)
CourseraWeek2::make_filename(2013)
df<-CourseraWeek2::fars_read_years(c(2013,2014))
head(df)
CourseraWeek2::fars_summarize_years(c(2013,2014))
